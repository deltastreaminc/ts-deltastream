/* tslint:disable */
/* eslint-disable */
/**
 * DeltaStream REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DataplaneRequest
 */
export interface DataplaneRequest {
    /**
     * 
     * @type {string}
     * @memberof DataplaneRequest
     */
    token: string;
    /**
     * 
     * @type {string}
     * @memberof DataplaneRequest
     */
    uri: string;
    /**
     * 
     * @type {string}
     * @memberof DataplaneRequest
     */
    statementID: string;
    /**
     * 
     * @type {string}
     * @memberof DataplaneRequest
     */
    requestType: DataplaneRequestRequestTypeEnum;
}


/**
 * @export
 */
export const DataplaneRequestRequestTypeEnum = {
    ResultSet: 'result-set',
    Streaming: 'streaming'
} as const;
export type DataplaneRequestRequestTypeEnum = typeof DataplaneRequestRequestTypeEnum[keyof typeof DataplaneRequestRequestTypeEnum];


/**
 * Check if a given object implements the DataplaneRequest interface.
 */
export function instanceOfDataplaneRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "token" in value;
    isInstance = isInstance && "uri" in value;
    isInstance = isInstance && "statementID" in value;
    isInstance = isInstance && "requestType" in value;

    return isInstance;
}

export function DataplaneRequestFromJSON(json: any): DataplaneRequest {
    return DataplaneRequestFromJSONTyped(json, false);
}

export function DataplaneRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataplaneRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'token': json['token'],
        'uri': json['uri'],
        'statementID': json['statementID'],
        'requestType': json['requestType'],
    };
}

export function DataplaneRequestToJSON(value?: DataplaneRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'token': value.token,
        'uri': value.uri,
        'statementID': value.statementID,
        'requestType': value.requestType,
    };
}

