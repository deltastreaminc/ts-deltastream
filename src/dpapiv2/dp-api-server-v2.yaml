openapi: 3.0.3
info:
  version: '2.0.0'
  title: DeltaStream Dataplane REST API
servers:
  - url: https://dataplane.deltastream.io/v2
components:
  schemas:
    StatementStatus:
      type: object
      properties:
        sqlState:
          type: string
        message:
          type: string
        statementID:
          type: string
          format: uuid
        createdOn:
          type: integer
          format: int64
          description: UTC POSIX timestamp of when statement was submitted
      required:
        - sqlState
        - statementID
        - createdOn
    ResultSet:
      type: object
      properties:
        sqlState:
          type: string
        message:
          type: string
        statementID:
          type: string
          format: uuid
        createdOn:
          type: integer
          format: int64
          description: UTC POSIX timestamp of when statement was submitted
        metadata:
          $ref: "#/components/schemas/ResultSetMetadata"
        data:
          type: array
          minItems: 0
          items:
            type: array
            items:
              anyOf:
                - type: "string"
                  nullable: true
              x-go-type: "*string"
          description: |-
            Each item within a column of data is expressed as a string, regardless of the DeltaStream type of the column.
            For example, the number 1.0 will be returned as "1.0".
      x-go-type: "apiv2.ResultSet"
      x-go-package: "github.com/deltastreaminc/go-deltastream/apiv2"
      required:
        - sqlState
        - statementID
        - createdOn
        - metadata
    ResultSetPartitionInfo:
      type: object
      properties:
        rowCount:
          type: integer
          format: int32
          minimum: 0
      required:
        - rowCount
    ResultSetMetadata:
      type: object
      properties:
        encoding:
          type: string
          enum: [json]
        partitionInfo:
          type: array
          items:
            $ref: "#/components/schemas/ResultSetPartitionInfo"
        columns:
          $ref: "#/components/schemas/ResultSetColumns"
      required:
        - encoding
        - partitionInfo
        - columns
    ResultSetColumns:
      type: array
      minItems: 0
      items:
        type: object
        properties:
          name:
            type: string
          type:
            type: string
          nullable:
            type: boolean
        required:
          - name
          - type
          - nullable
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    Version:
      type: object
      properties:
        major:
          type: integer
        minor:
          type: integer
        patch:
          type: integer
      required:
        - "major"
        - "minor"
        - "patch"
  responses:
    ErrBadRequest:
      description: Server cannot process the request due to a client error (malformed request syntax, invalid request message etc).
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ErrForbidden:
      description: Server cannot process the request due to invalid token.
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ErrNotFound:
      description: Requested REST endpoint is not valid.
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ErrDeadlineExceeded:
      description: Request execution was cancelled because it exceeded the timeout value
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ErrInternal:
      description: Internal server error.
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ErrServiceUnavailable:
      description: Service is temporarily unavailable
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/ErrorResponse"
  parameters:
    statementID:
      schema:
        type: string
        format: uuid
      name: statementID
      in: path
      required: true
      allowEmptyValue: false
    sessionID:
      schema:
        type: string
      name: sessionID
      in: query
      allowEmptyValue: false
    partitionID:
      schema:
        type: integer
        format: int32
        minimum: 0
      name: partitionID
      in: query
      allowEmptyValue: false
    timezone:
      schema:
        type: string
        example: America/New_York
      name: "timezone"
      in: query
      allowEmptyValue: false
  securitySchemes:
    apiToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: DeltaStream API token.
paths:
  /statements/{statementID}:
    get:
      operationId: GetStatementStatus
      description: Lookup the status of a statement.
      tags:
        - dataplane
      parameters:
      - $ref: '#/components/parameters/statementID'
      - $ref: '#/components/parameters/sessionID'
      - $ref: '#/components/parameters/partitionID'
      - $ref: '#/components/parameters/timezone'
      responses:
        '200':
          description: Statement successfully executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSet'
        '202':
          description: Statement execution is in progress. Use GET /statements/{statementID} to poll for status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementStatus'
        '400':
          $ref: '#/components/responses/ErrBadRequest'
        '403':
          $ref: '#/components/responses/ErrForbidden'
        '404':
          $ref: '#/components/responses/ErrNotFound'
        '408':
          $ref: '#/components/responses/ErrDeadlineExceeded'
        '500':
          $ref: '#/components/responses/ErrInternal'
        '503':
          $ref: '#/components/responses/ErrServiceUnavailable'
  /version:
    get:
      description: Returns the server version
      operationId: GetVersion
      tags:
        - dataplane
      responses:
        '200':
          description: server version
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Version"
        '403':
          $ref: '#/components/responses/ErrForbidden'
        '500':
          $ref: '#/components/responses/ErrInternal'
        '503':
          $ref: '#/components/responses/ErrServiceUnavailable'
security:
  - apiToken: []
